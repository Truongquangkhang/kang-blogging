name: CI/CD

on:
  pull_request:
    branches:
      - '*'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.49.0
      - name: Run Lint
        run: |
          chmod +x ./scripts/lint.sh
          ./scripts/lint.sh common
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - name: run test
        run: |
          chmod +x ./scripts/test.sh
          ./scripts/test.sh common .test.env
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

#      - name: Prepare
#        run: |
#          sudo make prepare
#
#      - name: Generate
#        run: |
#          chmod +x ./scripts/proto.sh
#          sudo make generate

      - name: Build
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh blogging

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Dockerized
        run: |
          echo 'Building docker image $IMAGE_REPOSITORY:$IMAGE_TAG'
          chmod +x ./scripts/dockerize.sh
          ./scripts/dockerize.sh $IMAGE_TAG $IMAGE_REPOSITORY $TYPE $SERVICE true
        env:
          IMAGE_TAG: m-${{ github.sha }}
          IMAGE_REPOSITORY: truongquangkhang/kang-blogging
          TYPE: app
          SERVICE: blogging

      - name: Docker push
        run: |
          docker push $IMAGE_REPOSITORY:$IMAGE_TAG
        env:
          IMAGE_TAG: m-${{ github.sha }}
          IMAGE_REPOSITORY: truongquangkhang/kang-blogging
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: blogging
#          path: internal/blogging/app-runtime

#  Dockerized:
#    name: Dockerized
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Dockerized
#        run: |
#          echo 'Building docker image $IMAGE_REPOSITORY:$IMAGE_TAG'
#          chmod +x ./scripts/dockerize.sh
#          ./scripts/dockerize.sh $IMAGE_TAG $IMAGE_REPOSITORY $TYPE $SERVICE true
#        env:
#          IMAGE_TAG: m-${{ github.sha }}
#          IMAGE_REPOSITORY: truongquangkhang/kang-blogging
#          TYPE: app
#          SERVICE: blogging