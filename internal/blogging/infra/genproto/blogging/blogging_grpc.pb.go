// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: blogging/blogging.proto.test

package blogging

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// BloggingServiceClient is the client API for BloggingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BloggingServiceClient interface {
}

type bloggingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBloggingServiceClient(cc grpc.ClientConnInterface) BloggingServiceClient {
	return &bloggingServiceClient{cc}
}

// BloggingServiceServer is the server API for BloggingService service.
// All implementations should embed UnimplementedBloggingServiceServer
// for forward compatibility
type BloggingServiceServer interface {
}

// UnimplementedBloggingServiceServer should be embedded to have forward compatible implementations.
type UnimplementedBloggingServiceServer struct {
}

// UnsafeBloggingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BloggingServiceServer will
// result in compilation errors.
type UnsafeBloggingServiceServer interface {
	mustEmbedUnimplementedBloggingServiceServer()
}

func RegisterBloggingServiceServer(s grpc.ServiceRegistrar, srv BloggingServiceServer) {
	s.RegisterService(&BloggingService_ServiceDesc, srv)
}

// BloggingService_ServiceDesc is the grpc.ServiceDesc for BloggingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BloggingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "blogging.BloggingService",
	HandlerType: (*BloggingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "blogging/blogging.proto.test",
}
